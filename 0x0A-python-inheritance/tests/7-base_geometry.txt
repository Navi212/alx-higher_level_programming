>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("my_int", 2)
>>> bg.integer_validator("my_int", -1)
Traceback (most recent call last):
ValueError: my_int must be greater than 0
>>> bg.integer_validator("my_int", "J")
Traceback (most recent call last):
TypeError: my_int must be an integer
>>> bg.integer_validator("width", 89)
>>> bg.integer_validator("width", -9)
Traceback (most recent call last):
ValueError: width must be greater than 0
>>> bg.integer_validator("width", "j")
Traceback (most recent call last):
TypeError: width must be an integer
>>> bg.integer_validator("width", 0)
Traceback (most recent call last):
ValueError: width must be greater than 0
>>> bg.integer_validator("width", -11)
Traceback (most recent call last):
ValueError: width must be greater than 0
>>> bg.integer_validator("width", [1, 2])
Traceback (most recent call last):
TypeError: width must be an integer
>>> bg.integer_validator("width", (1, 2))
Traceback (most recent call last):
TypeError: width must be an integer
>>> bg.integer_validator("width", "12")
Traceback (most recent call last):
TypeError: width must be an integer
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("my_int", -1)
Traceback (most recent call last):
ValueError: my_int must be greater than 0
>>> bg.integer_validator("my_int", 0)
Traceback (most recent call last):
ValueError: my_int must be greater than 0
>>> bg.integer_validator("my_int", "12")
Traceback (most recent call last):
TypeError: my_int must be an integer
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0

